aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg3 <- gg2 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE)
print(gg3)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
head(regressions)
example3 <- example2 %>%
filter(ID == 66)
example3 <- example2 %>%
filter(ID == 66)
library(readr)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(tidyverse)
library(ggplot2)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg2 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg3 <- gg2 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE)
print(gg3)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
head(regressions)
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method = "lm")
gg4
library(tidyverse)
gg2 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg3 <- gg2 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE)
print(gg3)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
head(regressions)
example3 <- example2 %>%
filter(ID == 66)
library(readr)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(tidyverse)
library(ggplot2)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg2 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg3 <- gg2 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE)
print(gg3)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
head(regressions)
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method = "lm")
gg4
library(lme4)
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
head(ranef(mod.1))
head(coef(mod.1))
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
head(re2)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
library(merTools)
FEsim(mod.2)
re.sim <- REsim(mod.2)
head(re.sim)
p1 <- plotREsim(re.sim)
p1
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
lm.1 <- lm(SMN7 ~ 1 + week, data=example)
summary(lm.1)
model.matrix(mod.2)
# library(lmerTest)
mod.2r <- lmer(SMN7 ~ 1 + week + ( 1  | ID), data=example)
summary(mod.2r)
anova(mod.2, mod.2r)
#library(mcmcsamp)
confint(mod.1, method="boot", nsim=1000)
summary(mod.1)
# uses SDs of random effects
# sigma = residual standard error
library(pbkrtest)
#pb <- PBmodcomp(mod.2,mod.2r)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",                        include.resid.var = TRUE)
head(PI)
lmer(y ~ 1 + time + (1 + time | subjects), data=data)
example3 <- example2 %>%
filter(ID == "66")
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method = "lm")
gg4
library(readr, message = FALSE)
library(readr, error = FALSE)
library(readr, warning=FALSE)
library(readr,)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(readr,)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
lmer(Y ~ 1 + (1 | ID), data=example)
predict is deterministic and uses only the fixed effects and the conditional modes (where available, i.e. not for the new subjects). simulate is non-deterministic because it samples random effect values for all subjects and then samples from the conditional distribution.
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",                        include.resid.var = TRUE)
head(PI)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",                        include.resid.var = TRUE)
head(PI)
View(PI)
PI.gg <- ggplot(PI, aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
PI.gg
PI.gg <- ggplot(PI, aes(x = y = fit)) + geom_point() + stat_smooth(method = "lm")
View(example.aug)
library(broom)
example.aug<- augment(mod.1, data = example)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
View(example.aug)
P.gg <- ggplot(example.aug, aes(x week = y = .fitted)) + geom_point() + stat_smooth(method = "lm")
library(tidyverse)
library(ggplot2)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
gg2 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2
P.gg <- ggplot(example.aug, aes(x = week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
PI.gg
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
PI.gg
P.gg <- ggplot(example.aug, aes(x= time, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
PI.gg
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
P.gg
library(psych)
corr.test(example.aug$.fitted, example.aug$SMN7)
cor.test(example.aug$.fitted, example.aug$SMN7)
P.gg
gg1
sim.1<- simulate(mod.2)
View(sim.1)
sim.1<- simulate(mod.2, 20)
sim.1<- simulate(mod.2, 20)
head(sim.1)
devtools::install_github("remkoduursma/bootpredictlme4")
sim.1<- simulate(mod.2, 20)
sim.1<- simulate(mod.2, 20)
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
P.gg
library(psych)
cor.test(example.aug$.fitted, example.aug$SMN7)
sim.1<- simulate(mod.2, 20)
sim.1<- simulate(mod.2, 10)
sim.1<- lme4::simulate(mod.2, 10)
sim.1<- lme4::simulate(mod.2, 10)
fixef(mod.2) / sigma(mod.2)
shinyMer(mod.1)
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
library(readr,)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(tidyverse)
library(ggplot2)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg2 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg3 <- gg2 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE)
print(gg3)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
head(regressions)
example3 <- example2 %>%
filter(ID == "66")
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method = "lm")
gg4
library(lme4)
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
head(ranef(mod.1))
head(coef(mod.1))
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1, data = example)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
head(re2)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
library(merTools)
FEsim(mod.2)
re.sim <- REsim(mod.2)
head(re.sim)
p1 <- plotREsim(re.sim)
p1
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
lm.1 <- lm(SMN7 ~ 1 + week, data=example)
summary(lm.1)
model.matrix(mod.2)
# library(lmerTest)
mod.2r <- lmer(SMN7 ~ 1 + week + ( 1  | ID), data=example)
summary(mod.2r)
anova(mod.2, mod.2r)
#library(mcmcsamp)
confint(mod.1, method="boot", nsim=1000)
summary(mod.1)
# uses SDs of random effects
# sigma = residual standard error
library(pbkrtest)
#pb <- PBmodcomp(mod.2,mod.2r)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",                        include.resid.var = TRUE)
head(PI)
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
P.gg
sim.1<- simulate(mod.2)
head(sim.1)
install.packages("Arm")
install.packages("arm")
install.packages("arm")
install.packages("arm")
install.packages("arm")
install.packages("arm")
library(arm)
se.fixef(mod.2)
se.ranef(mod.2)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example, level = 0.95, n.sims = 100, stat = "median", type="linear.prediction", include.resid.var = TRUE, which = "all")
head(PI)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example, level = 0.9, n.sims = 100, stat = "median", include.resid.var = TRUE, which = "all")
head(PI)
View(PI)
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
library(readr,)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(tidyverse)
library(ggplot2)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg2 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg3 <- gg2 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE)
print(gg3)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
head(regressions)
example3 <- example2 %>%
filter(ID == "66")
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method = "lm")
gg4
library(lme4)
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
head(ranef(mod.1))
head(coef(mod.1))
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1, data = example)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
head(re2)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
library(merTools)
FEsim(mod.2)
re.sim <- REsim(mod.2)
head(re.sim)
p1 <- plotREsim(re.sim)
p1
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
lm.1 <- lm(SMN7 ~ 1 + week, data=example)
summary(lm.1)
model.matrix(mod.2)
# library(lmerTest)
mod.2r <- lmer(SMN7 ~ 1 + week + ( 1  | ID), data=example)
summary(mod.2r)
anova(mod.2, mod.2r)
#library(mcmcsamp)
confint(mod.1, method="boot", nsim=1000)
summary(mod.1)
# uses SDs of random effects
# sigma = residual standard error
library(pbkrtest)
#pb <- PBmodcomp(mod.2,mod.2r)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example, level = 0.9, n.sims = 100, stat = "median", include.resid.var = TRUE, which = "all")
head(PI)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example, level = 0.9, n.sims = 100, stat = "median", include.resid.var = TRUE)
head(PI)
P.gg <- ggplot(example.aug, aes(x= week, y = .fitted)) + geom_point() + stat_smooth(method = "lm")
P.gg
sim.1<- simulate(mod.2)
head(sim.1)
View(random_params)
View(re.sim)
example$week.n <- (example$week + 10)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week + 100)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week + 50)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week + 20)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week + 25)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week - 25)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week - 40)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
example$week.n <- (example$week - 30)
mod.2n <- lmer(SMN7 ~ 1 + week.n + (week.n  | ID), data=example)
summary(mod.2n)
mod.2f <- lmer(SMN7 ~ 1 + week + (1  | ID), data=example)
summary(mod.2f)
0.1193933 + 1.96 * 0.240217
0.1193933 + 1.96 * 0.240217
0.1193933 - 1.96 * 0.240217
0.1193933 + (1.96 * 0.240217)
0.1193933 - (1.96 * 0.240217)
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
p1.gg <- re.sim %>%
filter(term == "intercept")
ggplot(p1.gg, aes(mean)) +
geom_density()
View(re.sim)
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
p1.gg <- re.sim %>%
filter(term == "(intercept)")
ggplot(p1.gg, aes(mean)) +
geom_density()
p1.gg <- re.sim %>%
filter(term == "(Intercept)")
ggplot(p1.gg, aes(mean)) +
geom_density()
p1.gg2 <- re.sim %>%
filter(term == "week")
ggplot(p1.gg2, aes(mean)) +
geom_density()
0.1193933 + (1.96 * 0.007745)
0.1193933 - (1.96 * 0.007745)
0.0004891 + (1.96 * 0.007745)
0.0004891 - (1.96 * 0.007745)
fixef(mod.2) / sigma(mod.2)
sigma(mod.1) - sigma(mod.2) / sigma(mod.1)
(sigma(mod.1) - sigma(mod.2)) / sigma(mod.1)
mod.2r <- lmer(SMN7 ~ 1 + week + ( 1  | ID), data=example)
summary(mod.2r)
anova(mod.2, mod.2r)
