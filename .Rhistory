####    The following two lines specify the measurement model for multiple indicators (X1-X3)
####    measured on two occasions (T1-T2)
COG_T1=~.8*T1X1+.9*T1X2+.7*T1X3   # This specifies the measurement model for COG_T1
COG_T2=~.8*T2X1+.9*T2X2+.7*T2X3   # This specifies the measurement model for COG_T2
#####     The following lines specify the core assumptions of the LCS
#####     and should not generally be modified
COG_T2 ~ 1*COG_T1           # Fixed regression of COG_T2 on COG_T1
dCOG1 =~ 1*COG_T2           # Fixed regression of dCOG1 on COG_T2
COG_T2 ~ 0*1                # This line constrains the intercept of COG_T2 to 0
COG_T2 ~~ 0*COG_T2          # This fixes the variance of the COG_T2 to 0
T1X1~0*1                  # This fixes the intercept of X1 to 0
T1X2~0*1                  # This fixes the intercept of X2 to 1
T1X3~.0*1                 # This fixes the intercept of X3 to 0.5
T2X1~0*1                  # This fixes the intercept of X1 to 0
T2X2~0*1                  # This fixes the intercept of X2 to 1
T2X3~0*1                 # This fixes the intercept of X3 to 0.5
###### The following five parameters will be estimated in the model.
###### Values can be modified manually to examine the effect on the model
dCOG1 ~ 1.5*1            # This fixes the intercept of the change score to 3
COG_T1 ~ 6*1           # This fixes the intercept of COG_T1 to 50.
dCOG1 ~~ .75*dCOG1        # This fixes the variance of the change scores to .75.
COG_T1 ~~ 1.3*COG_T1      # This fixes the variance of the COG_T1 to 8.
dCOG1~-0.1*COG_T1       # This fixes the self-feedback parameter to -0.1.
'
#Simulate data
set.seed(1234)
simdat<-simulateData(MILCS_simulate,sample.nobs = samplesize,meanstructure = T) #Simulate data
colMeans(simdat) #sanity check the means
write.csv(simdat,'2_simdat.csv')
library(lavaan)
library(semPlot)
#Fit the multiple indicator Univariate Latent Change Score model to simulated data
MILCS<-'
COG_T1=~1*T1X1+T1X2+T1X3                           # This specifies the measurement model for COG_T1
COG_T2=~1*T2X1+equal("COG_T1=~T1X2")*T2X2+equal("COG_T1=~T1X3")*T2X3   # This specifies the measurement model for COG_T2 with the equality constrained factor loadings
COG_T2 ~ 1*COG_T1     # Fixed regression of COG_T2 on COG_T1
dCOG1 =~ 1*COG_T2     # Fixed regression of dCOG1 on COG_T2
COG_T2 ~ 0*1          # This line constrains the intercept of COG_T2 to 0
COG_T2 ~~ 0*COG_T2    # This fixes the variance of the COG_T2 to 0
dCOG1 ~ 1             # This estimates the intercept of the change score
COG_T1 ~  1           # This estimates the intercept of COG_T1
dCOG1 ~~  dCOG1       # This estimates the variance of the change scores
COG_T1 ~~   COG_T1    # This estimates the variance of the COG_T1
dCOG1~COG_T1          # This estimates the self-feedback parameter
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~equal("T1X1~~T1X1")*T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~equal("T1X2~~T1X2")*T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~equal("T1X3~~T1X3")*T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~1                   # This estimates the intercept of X2 at T1
T1X3~1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~equal("T1X2~1")*1   # This estimates the intercept of X2 at T2
T2X3~equal("T1X3~1")*1   # This estimates the intercept of X3 at T2
'
fitMILCS <- lavaan(MILCS, data=simdatMILCS, estimator='mlr',fixed.x=FALSE,missing='fiml')
summary(fitMILCS, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
semPaths(fitMILCS, what = "eq", layout = "tree2" )
summary(fitMILCS, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
change<-'
C_T1=~1*T1X1 + L2*T1X2  + L3*T1X3
C_T2=~1*T2X1 + L2*T2X2 + L3*T2X3
COG_T2 ~ 1*COG_T1     # Fixed regression of C_T2 on C_T1
dC =~ 1*C_T2     # Fixed regression of dC on C_T2
C_T2 ~ 0*1        # This line constrains the intercept of C_T2 to 0
C_T2 ~~ 0*C_T2    # This fixes the variance of the C_T2 to 0
dC ~ 1             # This estimates the intercept of the change score
C_T1 ~  1           # This estimates the intercept of C_T1
dC ~~  dC       # This estimates the variance of the change scores
C_T1 ~~ C_T1    # This estimates the variance of the COG_T1
dC ~ C_T1          # This estimates the self-feedback parameter, which for now is just the covaration with change and T1
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~M2*1                   # This estimates the intercept of X2 at T1
T1X3~M3*1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~M2*1   # This estimates the intercept of X2 at T2
T2X3~M3*1   # This estimates the intercept of X3 at T2
'
change <- sem(MILCS, data=simdatMILCS, missing="ML")
summary(change, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
summary(fitMILCS, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
change <- sem(change, data=simdatMILCS, missing="ML")
change <- lavaan(change, data=simdatMILCS, missing="ML")
change <- lavaan(change, data=simdatMILCS, missing="ML")
View(simdat)
change<-'
C_T1=~1*T1X1 + L2*T1X2  + L3*T1X3
C_T2=~1*T2X1 + L2*T2X2 + L3*T2X3
COG_T2 ~ 1*COG_T1     # Fixed regression of C_T2 on C_T1
dC =~ 1*C_T2     # Fixed regression of dC on C_T2
C_T2 ~ 0*1        # This line constrains the intercept of C_T2 to 0
C_T2 ~~ 0*C_T2    # This fixes the variance of the C_T2 to 0
dC ~ 1             # This estimates the intercept of the change score
C_T1 ~  1           # This estimates the intercept of C_T1
dC ~~  dC       # This estimates the variance of the change scores
C_T1 ~~ C_T1    # This estimates the variance of the COG_T1
dC ~ C_T1          # This estimates the self-feedback parameter, which for now is just the covaration with change and T1
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~M2*1                   # This estimates the intercept of X2 at T1
T1X3~M3*1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~M2*1   # This estimates the intercept of X2 at T2
T2X3~M3*1   # This estimates the intercept of X3 at T2
'
change <- lavaan(change, data=simdatMILCS, missing="ML")
change <- lavaan(change, data=simdat, missing="ML")
View(simdat)
simdat <- as.tibble(simdat)
library(tidyverse)
simdat <- as.tibble(simdat)
View(simdat)
change.fit <- lavaan(change, data=simdat, missing="ML")
change <-
'
C_T1=~1*T1X1 + L2*T1X2  + L3*T1X3
C_T2=~1*T2X1 + L2*T2X2 + L3*T2X3
COG_T2 ~ 1*COG_T1     # Fixed regression of C_T2 on C_T1
dC =~ 1*C_T2     # Fixed regression of dC on C_T2
C_T2 ~ 0*1        # This line constrains the intercept of C_T2 to 0
C_T2 ~~ 0*C_T2    # This fixes the variance of the C_T2 to 0
dC ~ 1             # This estimates the intercept of the change score
C_T1 ~  1           # This estimates the intercept of C_T1
dC ~~  dC       # This estimates the variance of the change scores
C_T1 ~~ C_T1    # This estimates the variance of the COG_T1
dC ~ C_T1          # This estimates the self-feedback parameter, which for now is just the covaration with change and T1
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~M2*1                   # This estimates the intercept of X2 at T1
T1X3~M3*1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~M2*1   # This estimates the intercept of X2 at T2
T2X3~M3*1   # This estimates the intercept of X3 at T2
'
change.fit <- lavaan(change, data=simdat, missing="ML")
change <-
'C_T1=~1*T1X1 + L2*T1X2  + L3*T1X3
C_T2=~1*T2X1 + L2*T2X2 + L3*T2X3
COG_T2 ~ 1*COG_T1     # Fixed regression of C_T2 on C_T1
dC =~ 1*C_T2     # Fixed regression of dC on C_T2
C_T2 ~ 0*1        # This line constrains the intercept of C_T2 to 0
C_T2 ~~ 0*C_T2    # This fixes the variance of the C_T2 to 0
dC ~ 1             # This estimates the intercept of the change score
C_T1 ~  1           # This estimates the intercept of C_T1
dC ~~  dC       # This estimates the variance of the change scores
C_T1 ~~ C_T1    # This estimates the variance of the COG_T1
dC ~ C_T1          # This estimates the self-feedback parameter, which for now is just the covaration with change and T1
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~M2*1                   # This estimates the intercept of X2 at T1
T1X3~M3*1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~M2*1   # This estimates the intercept of X2 at T2
T2X3~M3*1   # This estimates the intercept of X3 at T2
'
change.fit <- lavaan(change, data=simdat, missing="ML")
change <-
'C_T1=~1*T1X1 + L2*T1X2  + L3*T1X3
C_T2=~1*T2X1 + L2*T2X2 + L3*T2X3
C_T2 ~ 1*C_T1     # Fixed regression of C_T2 on C_T1
dC =~ 1*C_T2     # Fixed regression of dC on C_T2
C_T2 ~ 0*1        # This line constrains the intercept of C_T2 to 0
C_T2 ~~ 0*C_T2    # This fixes the variance of the C_T2 to 0
dC ~ 1             # This estimates the intercept of the change score
C_T1 ~  1           # This estimates the intercept of C_T1
dC ~~  dC       # This estimates the variance of the change scores
C_T1 ~~ C_T1    # This estimates the variance of the COG_T1
dC ~ C_T1          # This estimates the self-feedback parameter, which for now is just the covaration with change and T1
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~M2*1                   # This estimates the intercept of X2 at T1
T1X3~M3*1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~M2*1   # This estimates the intercept of X2 at T2
T2X3~M3*1   # This estimates the intercept of X3 at T2
'
change.fit <- lavaan(change, data=simdat, missing="ML")
summary(change.fit, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
summary(fitMILCS, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
change <-
'C_T1=~1*T1X1 + L2*T1X2  + L3*T1X3
C_T2=~1*T2X1 + L2*T2X2 + L3*T2X3
C_T2 ~ 1*C_T1     # Fixed regression of C_T2 on C_T1
dC =~ 1*C_T2     # Fixed regression of dC on C_T2
C_T2 ~ 0*1        # This line constrains the intercept of C_T2 to 0
C_T2 ~~ 0*C_T2    # This fixes the variance of the C_T2 to 0
dC ~ 1             # This estimates the intercept of the change score
C_T1 ~  1           # This estimates the intercept of C_T1
dC ~~  dC       # This estimates the variance of the change scores
C_T1 ~~ C_T1    # This estimates the variance of the COG_T1
dC ~ C_T1          # This estimates the self-feedback parameter, which for now is just the covaration with change and T1
T1X1~~T2X1   # This allows residual covariance on indicator X1 across T1 and T2
T1X2~~T2X2   # This allows residual covariance on indicator X2 across T1 and T2
T1X3~~T2X3   # This allows residual covariance on indicator X3 across T1 and T2
T1X1~~T1X1   # This allows residual variance on indicator X1
T1X2~~T1X2   # This allows residual variance on indicator X2
T1X3~~T1X3   # This allows residual variance on indicator X3
T2X1~~T2X1  # This allows residual variance on indicator X1 at T2
T2X2~~T2X2  # This allows residual variance on indicator X2 at T2
T2X3~~T2X3  # This allows residual variance on indicator X3 at T2
T1X1~0*1                 # This constrains the intercept of X1 to 0 at T1
T1X2~M2*1                   # This estimates the intercept of X2 at T1
T1X3~M3*1                   # This estimates the intercept of X3 at T1
T2X1~0*1                 # This constrains the intercept of X1 to 0 at T2
T2X2~M2*1   # This estimates the intercept of X2 at T2
T2X3~M3*1   # This estimates the intercept of X3 at T2
'
change.fit <- sem(change, data=simdat, missing="ML")
summary(change.fit, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
BD_simulate<-'
COGlv_T1=~1*COG_T1        # Defining the COG latent variables
COGlv_T2=~1*COG_T2        # Defining the COG latent variables
COGlv_T3=~1*COG_T3        # Defining the COG latent variables
COGlv_T4=~1*COG_T4        # Defining the COG latent variables
NEUlv_T1=~1*NEU_T1        # Defining the NEU latent variables
NEUlv_T2=~1*NEU_T2        # Defining the NEU latent variables
NEUlv_T3=~1*NEU_T3        # Defining the NEU latent variables
NEUlv_T4=~1*NEU_T4        # Defining the NEU latent variables
##### The following parameters capture the core assumptions of the LCS and should not generally be modified
COGlv_T2 ~ 1*COGlv_T1     # This parameter regresses COG_T2 perfectly on COG_T1
COGlv_T3 ~ 1*COGlv_T2     # This parameter regresses COG_T3 perfectly on COG_T2
COGlv_T4 ~ 1*COGlv_T3     # This parameter regresses COG_T4 perfectly on COG_T3
NEUlv_T2 ~ 1*NEUlv_T1     # This parameter regresses NEU_T2 perfectly on NEU_T1
NEUlv_T3 ~ 1*NEUlv_T2     # This parameter regresses NEU_T3 perfectly on NEU_T2
NEUlv_T4 ~ 1*NEUlv_T3     # This parameter regresses NEU_T4 perfectly on NEU_T3
dCOG1 =~ 1*COGlv_T2       # This defines the change score as measured perfectly by scores on COG_T2
dCOG2 =~ 1*COGlv_T3       # This defines the change score as measured perfectly by scores on COG_T3
dCOG3 =~ 1*COGlv_T4       # This defines the change score as measured perfectly by scores on COG_T4
dNEU1 =~ 1*NEUlv_T2       # This defines the change score as measured perfectly by scores on NEU_T2
dNEU2 =~ 1*NEUlv_T3       # This defines the change score as measured perfectly by scores on NEU_T3
dNEU3 =~ 1*NEUlv_T4       # This defines the change score as measured perfectly by scores on NEU_T4
COG_T1~~5*COG_T1          # This specifies the COG residual variances
COG_T2~~5*COG_T2          # This specifies the COG residual variances
COG_T3~~5*COG_T3          # This specifies the COG residual variances
COG_T4~~5*COG_T4          # This specifies the COG residual variances
NEU_T1~~5*NEU_T1          # This specifies the NEU residual variances
NEU_T2~~5*NEU_T2          # This specifies the NEU residual variances
NEU_T3~~5*NEU_T3          # This specifies the NEU residual variances
NEU_T4~~5*NEU_T4          # This specifies the NEU residual variances
#Dynamics
dNEU1~0.05*NEUlv_T1       # This specifies the NEU self-feedback parameter (equality constrained across timepoints)
dNEU2~0.05*NEUlv_T2       # This specifies the NEU self-feedback parameter (equality constrained across timepoints)
dNEU3~0.05*NEUlv_T3       # This specifies the NEU self-feedback parameter (equality constrained across timepoints)
dCOG1~0.05*COGlv_T1       # This specifies the COG self-feedback parameter (equality constrained across timepoints)
dCOG2~0.05*COGlv_T2       # This specifies the COG self-feedback parameter (equality constrained across timepoints)
dCOG3~0.05*COGlv_T3       # This specifies the COG self-feedback parameter (equality constrained across timepoints)
dNEU1~.3*COGlv_T1         # This specifies the COG to NEU coupling parameter
dNEU2~.3*COGlv_T2         # This specifies the COG to NEU coupling parameter
dNEU3~.3*COGlv_T3         # This specifies the COG to NEU coupling parameter
dCOG1~0.4*NEUlv_T1        # This specifies the NEU to COG coupling parameter
dCOG2~0.4*NEUlv_T2        # This specifies the NEU to COG coupling parameter
dCOG3~0.4*NEUlv_T3        # This specifies the NEU to COG coupling parameter
iCOG=~1*COGlv_T1                   # This defines the COG intercept measurement model
sCOG=~1*dCOG1+1*dCOG2+1*dCOG3      # This defines the COG slope measurement model
iCOG~2*1                           # This specifies the COG intercept intercept (mean)
iCOG~~2*iCOG                       # This specifies the COG intercept variance
sCOG~2*1                           # This specifies the COG slope intercept
sCOG~~3*sCOG                       # This specifies the COG slope variance
iNEU=~1*NEUlv_T1                   # This defines the NEU slope measurement model
sNEU=~1*dNEU1+1*dNEU2+1*dNEU3      # This defines the NEU slope measurement model
iNEU~2*1                           # This specifies the NEU intercept intercept (mean)
iNEU~~2*iNEU                       # This specifies the NEU intercept variance
sNEU~2*1                           # This specifies the NEU slope intercept
sNEU~~3*sNEU                       # This specifies the NEU slope variance
iNEU~~.8*sNEU                      # This specifies the iNEU sNEU covariance
iNEU~~.8*sCOG                      # This specifies the iNEU sCOG covariance
iNEU~~.8*iCOG                      # This specifies the iNEU iCOG covariance
iCOG~~.8*sCOG                      # This specifies the iCOG sCOG covariance
iCOG~~.8*sNEU                      # This specifies the iCOG sNEU covariance
sCOG~~.8*sNEU                      # This specifies the sCOG sNEU covariance
'
set.seed(1234)
simdatBD<-simulateData(BD_simulate,sample.nobs = samplesize,meanstructure = T) #Simulate data
colMeans(simdatBD)
write.csv(simdatBD,'simdatBD.csv')
BD_simulate<-'
COGlv_T1=~1*COG_T1        # Defining the COG latent variables
COGlv_T2=~1*COG_T2        # Defining the COG latent variables
COGlv_T3=~1*COG_T3        # Defining the COG latent variables
COGlv_T4=~1*COG_T4        # Defining the COG latent variables
NEUlv_T1=~1*NEU_T1        # Defining the NEU latent variables
NEUlv_T2=~1*NEU_T2        # Defining the NEU latent variables
NEUlv_T3=~1*NEU_T3        # Defining the NEU latent variables
NEUlv_T4=~1*NEU_T4        # Defining the NEU latent variables
##### The following parameters capture the core assumptions of the LCS and should not generally be modified
COGlv_T2 ~ 1*COGlv_T1     # This parameter regresses COG_T2 perfectly on COG_T1
COGlv_T3 ~ 1*COGlv_T2     # This parameter regresses COG_T3 perfectly on COG_T2
COGlv_T4 ~ 1*COGlv_T3     # This parameter regresses COG_T4 perfectly on COG_T3
NEUlv_T2 ~ 1*NEUlv_T1     # This parameter regresses NEU_T2 perfectly on NEU_T1
NEUlv_T3 ~ 1*NEUlv_T2     # This parameter regresses NEU_T3 perfectly on NEU_T2
NEUlv_T4 ~ 1*NEUlv_T3     # This parameter regresses NEU_T4 perfectly on NEU_T3
dCOG1 =~ 1*COGlv_T2       # This defines the change score as measured perfectly by scores on COG_T2
dCOG2 =~ 1*COGlv_T3       # This defines the change score as measured perfectly by scores on COG_T3
dCOG3 =~ 1*COGlv_T4       # This defines the change score as measured perfectly by scores on COG_T4
dNEU1 =~ 1*NEUlv_T2       # This defines the change score as measured perfectly by scores on NEU_T2
dNEU2 =~ 1*NEUlv_T3       # This defines the change score as measured perfectly by scores on NEU_T3
dNEU3 =~ 1*NEUlv_T4       # This defines the change score as measured perfectly by scores on NEU_T4
COG_T1~~5*COG_T1          # This specifies the COG residual variances
COG_T2~~5*COG_T2          # This specifies the COG residual variances
COG_T3~~5*COG_T3          # This specifies the COG residual variances
COG_T4~~5*COG_T4          # This specifies the COG residual variances
NEU_T1~~5*NEU_T1          # This specifies the NEU residual variances
NEU_T2~~5*NEU_T2          # This specifies the NEU residual variances
NEU_T3~~5*NEU_T3          # This specifies the NEU residual variances
NEU_T4~~5*NEU_T4          # This specifies the NEU residual variances
#Dynamics
dNEU1~0.05*NEUlv_T1       # This specifies the NEU self-feedback parameter (equality constrained across timepoints)
dNEU2~0.05*NEUlv_T2       # This specifies the NEU self-feedback parameter (equality constrained across timepoints)
dNEU3~0.05*NEUlv_T3       # This specifies the NEU self-feedback parameter (equality constrained across timepoints)
dCOG1~0.05*COGlv_T1       # This specifies the COG self-feedback parameter (equality constrained across timepoints)
dCOG2~0.05*COGlv_T2       # This specifies the COG self-feedback parameter (equality constrained across timepoints)
dCOG3~0.05*COGlv_T3       # This specifies the COG self-feedback parameter (equality constrained across timepoints)
dNEU1~.3*COGlv_T1         # This specifies the COG to NEU coupling parameter
dNEU2~.3*COGlv_T2         # This specifies the COG to NEU coupling parameter
dNEU3~.3*COGlv_T3         # This specifies the COG to NEU coupling parameter
dCOG1~0.4*NEUlv_T1        # This specifies the NEU to COG coupling parameter
dCOG2~0.4*NEUlv_T2        # This specifies the NEU to COG coupling parameter
dCOG3~0.4*NEUlv_T3        # This specifies the NEU to COG coupling parameter
iCOG=~1*COGlv_T1                   # This defines the COG intercept measurement model
sCOG=~1*dCOG1+1*dCOG2+1*dCOG3      # This defines the COG slope measurement model
iCOG~2*1                           # This specifies the COG intercept intercept (mean)
iCOG~~2*iCOG                       # This specifies the COG intercept variance
sCOG~2*1                           # This specifies the COG slope intercept
sCOG~~3*sCOG                       # This specifies the COG slope variance
iNEU=~1*NEUlv_T1                   # This defines the NEU slope measurement model
sNEU=~1*dNEU1+1*dNEU2+1*dNEU3      # This defines the NEU slope measurement model
iNEU~2*1                           # This specifies the NEU intercept intercept (mean)
iNEU~~2*iNEU                       # This specifies the NEU intercept variance
sNEU~2*1                           # This specifies the NEU slope intercept
sNEU~~3*sNEU                       # This specifies the NEU slope variance
iNEU~~.8*sNEU                      # This specifies the iNEU sNEU covariance
iNEU~~.8*sCOG                      # This specifies the iNEU sCOG covariance
iNEU~~.8*iCOG                      # This specifies the iNEU iCOG covariance
iCOG~~.8*sCOG                      # This specifies the iCOG sCOG covariance
iCOG~~.8*sNEU                      # This specifies the iCOG sNEU covariance
sCOG~~.8*sNEU                      # This specifies the sCOG sNEU covariance
'
set.seed(1234)
simdatBD<-simulateData(BD_simulate,sample.nobs = samplesize,meanstructure = T) #Simulate data
colMeans(simdatBD)
write.csv(simdatBD,'simdatBD.csv')
BDCS<-'
COGlv_T1=~1*COG_T1        # Defining the COG latent variables
COGlv_T2=~1*COG_T2        # Defining the COG latent variables
COGlv_T3=~1*COG_T3        # Defining the COG latent variables
COGlv_T4=~1*COG_T4        # Defining the COG latent variables
NEUlv_T1=~1*NEU_T1        # Defining the NEU latent variables
NEUlv_T2=~1*NEU_T2        # Defining the NEU latent variables
NEUlv_T3=~1*NEU_T3        # Defining the NEU latent variables
NEUlv_T4=~1*NEU_T4        # Defining the NEU latent variables
COGlv_T2 ~ 1*COGlv_T1     # This parameter regresses COG_T2 perfectly on COG_T1
COGlv_T3 ~ 1*COGlv_T2     # This parameter regresses COG_T3 perfectly on COG_T2
COGlv_T4 ~ 1*COGlv_T3     # This parameter regresses COG_T4 perfectly on COG_T3
NEUlv_T2 ~ 1*NEUlv_T1     # This parameter regresses NEU_T2 perfectly on NEU_T1
NEUlv_T3 ~ 1*NEUlv_T2     # This parameter regresses NEU_T3 perfectly on NEU_T2
NEUlv_T4 ~ 1*NEUlv_T3     # This parameter regresses NEU_T4 perfectly on NEU_T3
dCOG1 =~ 1*COGlv_T2       # This defines the change score as measured perfectly by scores on COG_T2
dCOG2 =~ 1*COGlv_T3       # This defines the change score as measured perfectly by scores on COG_T3
dCOG3 =~ 1*COGlv_T4       # This defines the change score as measured perfectly by scores on COG_T4
dNEU1 =~ 1*NEUlv_T2       # This defines the change score as measured perfectly by scores on NEU_T2
dNEU2 =~ 1*NEUlv_T3       # This defines the change score as measured perfectly by scores on NEU_T3
dNEU3 =~ 1*NEUlv_T4       # This defines the change score as measured perfectly by scores on NEU_T4
COG_T1~~COG_T1          # This estimates the COG residual variances
COG_T2~~COG_T2          # This estimates the COG residual variances
COG_T3~~COG_T3          # This estimates the COG residual variances
COG_T4~~COG_T4          # This estimates the COG residual variances
NEU_T1~~NEU_T1          # This estimates the NEU residual variances
NEU_T2~~NEU_T2          # This estimates the NEU residual variances
NEU_T3~~NEU_T3          # This estimates the NEU residual variances
NEU_T4~~NEU_T4          # This estimates the NEU residual variances
#Dynamics
dNEU1~B1*NEUlv_T1       # This estimates the NEU self-feedback parameter
dNEU2~B1*NEUlv_T2       # This estimates the NEU self-feedback parameter
dNEU3~B1*NEUlv_T3       # This estimates the NEU self-feedback parameter
dCOG1~B2*COGlv_T1       # This estimates the COG self-feedback parameter
dCOG2~B2*COGlv_T2       # This estimates the COG self-feedback parameter
dCOG3~B2*COGlv_T3       # This estimates the COG self-feedback parameter
dNEU1~C1*COGlv_T1         # This estimates the COG to NEU coupling parameter
dNEU2~C1*COGlv_T2         # This estimates the COG to NEU coupling parameter
dNEU3~C1*COGlv_T3         # This estimates the COG to NEU coupling parameter
dCOG1~C2*NEUlv_T1        # This estimates the NEU to COG coupling parameter
dCOG2~C2*NEUlv_T2        # This estimates the NEU to COG coupling parameter
dCOG3~C2*NEUlv_T3        # This estimates the NEU to COG coupling parameter
iCOG=~1*COGlv_T1                   # This defines the COG intercept measurement model
sCOG=~1*dCOG1+1*dCOG2+1*dCOG3      # This defines the COG slope measurement model
iCOG~1                             # This estimates the COG intercept intercept (mean)
iCOG~~iCOG                         # This estimates the COG intercept variance
sCOG~1                             # This estimates the COG slope intercept
sCOG~~sCOG                         # This estimates the COG slope variance
iNEU=~1*NEUlv_T1                   # This defines the NEU slope measurement model
sNEU=~1*dNEU1+1*dNEU2+1*dNEU3      # This defines the NEU slope measurement model
iNEU~1                             # This estimates the NEU intercept intercept (mean)
iNEU~~iNEU                         # This estimates the NEU intercept variance
sNEU~1                             # This estimates the NEU slope intercept
sNEU~~sNEU                         # This estimates the NEU slope variance
iNEU~~sNEU                      # This estimates the iNEU sNEU covariance
iNEU~~sCOG                      # This estimates the iNEU sCOG covariance
iNEU~~iCOG                      # This estimates the iNEU iCOG covariance
iCOG~~sCOG                      # This estimates the iCOG sCOG covariance
iCOG~~sNEU                      # This estimates the iCOG sNEU covariance
sCOG~~sNEU                      # This estimates the sCOG sNEU covariance
'
fitBDCS <- lavaan(BDCS, data=simdatBD, missing=ML)
BDCS<-'
COGlv_T1=~1*COG_T1        # Defining the COG latent variables
COGlv_T2=~1*COG_T2        # Defining the COG latent variables
COGlv_T3=~1*COG_T3        # Defining the COG latent variables
COGlv_T4=~1*COG_T4        # Defining the COG latent variables
NEUlv_T1=~1*NEU_T1        # Defining the NEU latent variables
NEUlv_T2=~1*NEU_T2        # Defining the NEU latent variables
NEUlv_T3=~1*NEU_T3        # Defining the NEU latent variables
NEUlv_T4=~1*NEU_T4        # Defining the NEU latent variables
COGlv_T2 ~ 1*COGlv_T1     # This parameter regresses COG_T2 perfectly on COG_T1
COGlv_T3 ~ 1*COGlv_T2     # This parameter regresses COG_T3 perfectly on COG_T2
COGlv_T4 ~ 1*COGlv_T3     # This parameter regresses COG_T4 perfectly on COG_T3
NEUlv_T2 ~ 1*NEUlv_T1     # This parameter regresses NEU_T2 perfectly on NEU_T1
NEUlv_T3 ~ 1*NEUlv_T2     # This parameter regresses NEU_T3 perfectly on NEU_T2
NEUlv_T4 ~ 1*NEUlv_T3     # This parameter regresses NEU_T4 perfectly on NEU_T3
dCOG1 =~ 1*COGlv_T2       # This defines the change score as measured perfectly by scores on COG_T2
dCOG2 =~ 1*COGlv_T3       # This defines the change score as measured perfectly by scores on COG_T3
dCOG3 =~ 1*COGlv_T4       # This defines the change score as measured perfectly by scores on COG_T4
dNEU1 =~ 1*NEUlv_T2       # This defines the change score as measured perfectly by scores on NEU_T2
dNEU2 =~ 1*NEUlv_T3       # This defines the change score as measured perfectly by scores on NEU_T3
dNEU3 =~ 1*NEUlv_T4       # This defines the change score as measured perfectly by scores on NEU_T4
COG_T1~~COG_T1          # This estimates the COG residual variances
COG_T2~~COG_T2          # This estimates the COG residual variances
COG_T3~~COG_T3          # This estimates the COG residual variances
COG_T4~~COG_T4          # This estimates the COG residual variances
NEU_T1~~NEU_T1          # This estimates the NEU residual variances
NEU_T2~~NEU_T2          # This estimates the NEU residual variances
NEU_T3~~NEU_T3          # This estimates the NEU residual variances
NEU_T4~~NEU_T4          # This estimates the NEU residual variances
#Dynamics
dNEU1~B1*NEUlv_T1       # This estimates the NEU self-feedback parameter
dNEU2~B1*NEUlv_T2       # This estimates the NEU self-feedback parameter
dNEU3~B1*NEUlv_T3       # This estimates the NEU self-feedback parameter
dCOG1~B2*COGlv_T1       # This estimates the COG self-feedback parameter
dCOG2~B2*COGlv_T2       # This estimates the COG self-feedback parameter
dCOG3~B2*COGlv_T3       # This estimates the COG self-feedback parameter
dNEU1~C1*COGlv_T1         # This estimates the COG to NEU coupling parameter
dNEU2~C1*COGlv_T2         # This estimates the COG to NEU coupling parameter
dNEU3~C1*COGlv_T3         # This estimates the COG to NEU coupling parameter
dCOG1~C2*NEUlv_T1        # This estimates the NEU to COG coupling parameter
dCOG2~C2*NEUlv_T2        # This estimates the NEU to COG coupling parameter
dCOG3~C2*NEUlv_T3        # This estimates the NEU to COG coupling parameter
iCOG=~1*COGlv_T1                   # This defines the COG intercept measurement model
sCOG=~1*dCOG1+1*dCOG2+1*dCOG3      # This defines the COG slope measurement model
iCOG~1                             # This estimates the COG intercept intercept (mean)
iCOG~~iCOG                         # This estimates the COG intercept variance
sCOG~1                             # This estimates the COG slope intercept
sCOG~~sCOG                         # This estimates the COG slope variance
iNEU=~1*NEUlv_T1                   # This defines the NEU slope measurement model
sNEU=~1*dNEU1+1*dNEU2+1*dNEU3      # This defines the NEU slope measurement model
iNEU~1                             # This estimates the NEU intercept intercept (mean)
iNEU~~iNEU                         # This estimates the NEU intercept variance
sNEU~1                             # This estimates the NEU slope intercept
sNEU~~sNEU                         # This estimates the NEU slope variance
iNEU~~sNEU                      # This estimates the iNEU sNEU covariance
iNEU~~sCOG                      # This estimates the iNEU sCOG covariance
iNEU~~iCOG                      # This estimates the iNEU iCOG covariance
iCOG~~sCOG                      # This estimates the iCOG sCOG covariance
iCOG~~sNEU                      # This estimates the iCOG sNEU covariance
sCOG~~sNEU                      # This estimates the sCOG sNEU covariance
'
fitBDCS <- lavaan(BDCS, data=simdatBD, missing="ML")
summary(fitBDCS, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
