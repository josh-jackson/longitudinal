PI <- predictInterval(merMod = mod.2, newdata = example,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",                        include.resid.var = TRUE)
View(PI)
View(PI)
library(merTools)
re3 <- REsim(mod.2)
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
library(merTools)
re3 <- REsim(mod.2)
library(merTools)
re3 <- REsim(mod.1)
library(merTools)
re3 <- REsim(mod.2)
library(readr)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_guide = FALSE)
print(gg2)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
select(ID) %>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data=.)))
regressions
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method="lm")
gg4
library(lme4)
mod.1 <- lmer(SMN7 ~ 1 + (1  | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
library(reghelper)
ICC(mod.1)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
ranef(mod.1)
coef(mod.1)
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1, effects = "ran_modes")
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
library(merTools)
re3 <- REsim(mod.2)
fastdisp(mod.2)
FEsim(mod.2)
showClass(mod.2)
showClass(mod.2)
library(readr)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_guide = FALSE)
print(gg2)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
select(ID) %>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data=.)))
regressions
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method="lm")
gg4
library(lme4)
mod.1 <- lmer(SMN7 ~ 1 + (1  | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
library(reghelper)
ICC(mod.1)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
ranef(mod.1)
coef(mod.1)
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1, effects = "ran_modes")
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
library(merTools)
showClass(mod.2)
FEsim(mod.2)
re.sim <- REsim(mod.2)
View(re.sim)
head(re.sim)
p1 <- plotREsim(re.sim)
p1 <- plotREsim(re.sim)
p1
p1.gg <- p1 %>%
filter(term == week)
p1.gg <- p1 %>%
filter(term == "week")
p1 <- plotREsim(re.sim)
p1
p1.gg <- re.sim %>%
filter(term == "week")
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
confint(mod.2, method="boot", nsim=1000)
install.packages("mcmcsamp")
summary(mod.2)
# uses SDs of random effects
# sigma = residual standard error
confint(mod.1, method="boot", nsim=1000)
summary(mod.1)
# uses SDs of random effects
# sigma = residual standard error
library(mcmcsamp)
pb <- PBmodcomp(mod.2,mod.2r,seed=123)
install.packages("pbkrtest")
library(pbkrtest)
pb <- PBmodcomp(mod.2,mod.1,seed=123)
mod.2r <- lmer(SMN7 ~ 1 + week + ( 1  | ID), data=example)
summary(mod.2r)
library(pbkrtest)
pb <- PBmodcomp(mod.2,mod.2r,seed=123)
library(pbkrtest)
pb <- PBmodcomp(mod.2r,mod.2,seed=123)
mod.2r <- lmer(SMN7 ~ 1 + week + ( 1  | ID), data=example)
summary(mod.2r)
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
library(pbkrtest)
pb <- PBmodcomp(mod.2r,mod.2,seed=123)
library(pbkrtest)
pb <- PBmodcomp(mod.2,mod.1,seed=123)
library(pbkrtest)
pb <- PBmodcomp(mod.2,mod.2r)
library(merTools)
# see also their shiny app: shinyMer(mod.1)
PI <- predictInterval(merMod = mod.2, newdata = example,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",                        include.resid.var = TRUE)
View(PI)
random_params <- tidy(mod.2, effect = "random")
random_params <- tidy(mod.2, effect = "ran_pars")
View(random_params)
random_params <- tidy(mod.2, effect = "ran_modes")
View(random_params)
re2 <- ranef(mod.2)
re2 <- ranef(mod.2)
re2
library(broom)
example.aug<- augment(mod.1, effects = "ran_modes")
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
View(example.aug)
library(broom)
example.aug<- augment(mod.1)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
View(example.aug)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
ran_params.gg <- random_params %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
confint(mod.1, method="boot", nsim=1000)
summary(mod.1)
# uses SDs of random effects
# sigma = residual standard error
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_legend = FALSE)
print(gg2)
library(reghelper)
ICC(mod.1)
mod.1 <- lmer(SMN7 ~ 1 + (1  | ID), data=example)
summary(mod.1)
library(reghelper)
ICC(mod.1)
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
library(reghelper)
ICC(mod.1)
library(lme4)
lmer(y ~ 1 + (1 | subjects), data=data)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_legend = FALSE)
print(gg2)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
select(ID) %>%
distinct %>%
sample_n(10)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
select(ID) %>%
distinct %>%
sample_n(10)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
select(ID)%>%
distinct %>%
sample_n(10)
View(example)
as.factor(example$ID)
example$ID <- as.factor(example$ID)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_legend = FALSE)
print(gg2)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
select(ID)%>%
distinct %>%
sample_n(10)
library(dplyr)
set.seed(11)
ex.random <- example %>%
select(ID)%>%
distinct %>%
sample_n(10)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data=.)))
regressions
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method="lm")
gg4
lmer(y ~ 1 + (1 | subjects), data=data)
test <- lmer(y ~ 1 + (1 | subjects), data=data)
lmer(y ~ 1 + time + (1 + time | subjects), data=data)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data=.)))
regressions
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method="lm")
gg4
# test <- lmer(y ~ 1 + (1 | subjects), data=data)
# lmer(y ~ 1 + time + (1 + time | subjects), data=data)
# lmer(y ~ time + (time | subjects), data=data)
# both are equivalent
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
0.001823/(0.001823 + 0.001302)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
ranef(mod.1)
head(ranef(mod.1))
head(coef(mod.1))
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
head(re2)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
library(readr)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_legend = FALSE)
print(gg2)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data=.)))
regressions
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method="lm")
gg4
library(lme4)
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
head(ranef(mod.1))
head(coef(mod.1))
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
head(re2)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
library(merTools)
FEsim(mod.2)
re.sim <- REsim(mod.2)
head(re.sim)
p1 <- plotREsim(re.sim)
p1
p1.gg <- re.sim %>%
filter(term == "week")
ggplot(p1.gg, aes(mean)) +
geom_density()
lm.1 <- lm(SMN7 ~ 1 + week, data=example)
summary(lm.1)
model.matrix(mod.2)
# library(lmerTest)
anova(mod.1, mod.2)
anova(mod.2, mod.2r)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_legend = FALSE)
print(gg2)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
re2 <- ranef(mod.2)
library(readr)
example <- read_csv("~/Box Sync/5165 Applied Longitudinal Data Analysis/Longitudinal/example.csv")
example$ID <- as.factor(example$ID)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7)) + geom_point() + stat_smooth(method = "lm")
print(gg1)
regression <- lm(SMN7 ~ week, data = example)
summary(regression)
library(tidyverse)
gg1 <- ggplot(example,
aes(x = week, y = SMN7, group = ID)) + geom_point() + stat_smooth(method = "lm", se = FALSE)
gg2 <- gg1 +  stat_smooth(data = example, aes(x = week, y = SMN7, group=1, colour="#990000"), method = "lm", size = 3, se=FALSE,show_legend = FALSE)
print(gg2)
library(tidyverse)
library(broom)
set.seed(11)
ex.random <- example %>%
dplyr::select(ID)%>%
distinct %>%
sample_n(10)
example2 <-
left_join(ex.random, example)
regressions <- example2 %>%
group_by(ID) %>%
do(tidy(lm(SMN7 ~ week, data = .)))
regressions
example3 <- example2 %>%
filter(ID == 66)
gg4 <-  ggplot(example3, aes(x = week, y = SMN7, group = ID)) +  geom_point() + stat_smooth(method = "lm")
gg4
library(lme4)
# test <- lmer(y ~ 1 + (1 | subjects), data=data)
# lmer(y ~ 1 + time + (1 + time | subjects), data=data)
# lmer(y ~ time + (time | subjects), data=data)
# both are equivalent
mod.1 <- lmer(SMN7 ~ 1 + (1 | ID), data=example)
summary(mod.1)
0.001823/(0.001823 + 0.001302)
class(mod.1)
library(sjPlot)
sjp.lmer(mod.1, facet.grid = FALSE,
sort = "sort.all")
head(ranef(mod.1))
head(coef(mod.1))
fixef(mod.1)
#coef = fixef + raneff
# 0.04724795
0.106972 -0.0597240676
library(broom)
example.aug<- augment(mod.1)
# .fitted	 = predicted values
# .resid	= residuals/errors
# .fixed	 = predicted values with no random effects
mod.2 <- lmer(SMN7 ~ 1 + week + (week  | ID), data=example)
summary(mod.2)
re2 <- ranef(mod.2)
head(re2)
head(re2)
re2 <- ranef(mod.2)
head(re2)
random_params <- tidy(mod.2, effect = "ran_modes")
head(random_params)
library(merTools)
FEsim(mod.2)
re.sim <- REsim(mod.2)
head(re.sim)
p1 <- plotREsim(re.sim)
p1
